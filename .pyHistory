from arcgis.features import GeoAccessor, GeoSeriesAccessor import numpy as np arcpy.env.overwriteOutput = True arcpy.CheckOutExtension("Spatial")  gdb = r'.\bike_network_sums.gdb' zones = os.path.join(gdb, 'zones') bike_lanes = os.path.join(gdb, 'bike_lanes') zone_explode = arcpy.MultipartToSinglepart_management (zones, os.path.join(gdb,'zone_explode')) buffer = arcpy.Buffer_analysis(zone_explode, os.path.join(gdb, 'buff_zones'), '.25 Miles') print('start_sw') arcpy.SummarizeWithin_analysis(buffer, bike_lanes, os.path.join(gdb,'sum_bike_lanes2'), keep_all_polygons='KEEP_ALL', sum_shape='ADD_SHAPE_SUM',shape_unit='MILES') print('done')
import arcpy import os import pandas as pd from arcgis.features import GeoAccessor, GeoSeriesAccessor import numpy as np arcpy.env.overwriteOutput = True arcpy.CheckOutExtension("Spatial")  gdb = r"E:\Projects\sw_test\bike_network_sums.gdb" zones = os.path.join(gdb, 'zones') bike_lanes = os.path.join(gdb, 'bike_lanes') zone_explode = arcpy.MultipartToSinglepart_management (zones, os.path.join(gdb,'zone_explode')) buffer = arcpy.Buffer_analysis(zone_explode, os.path.join(gdb, 'buff_zones'), '.25 Miles') print('start summarize within') arcpy.SummarizeWithin_analysis(buffer, bike_lanes, os.path.join(gdb,'sum_bike_lanes2'), keep_all_polygons='KEEP_ALL', sum_shape='ADD_SHAPE_SUM',shape_unit='MILES') print('done')
import sys print(sys.executable)
